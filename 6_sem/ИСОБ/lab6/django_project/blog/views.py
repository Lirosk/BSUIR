from\
typing\
import\
Optional\
;\
from\
django\
.\
shortcuts\
import\
render\
;\
from\
django.contrib.auth.mixins\
import\
LoginRequiredMixin\
,\
UserPassesTestMixin\
;\
from\
django\
.\
views\
.\
generic\
import\
ListView\
,\
DetailView\
,\
CreateView\
,\
DeleteView\
,\
UpdateView\
;\
from\
.\
models\
import\
Post
def\
home\
(\
request\
)\
:\
context\
=\
{\
'\
posts\
'\
:\
Post\
.\
objects\
.\
all\
(\
)\
};return\
render\
(\
request\
,\
'\
blog/home.html\
'\
,\
context\
)
class\
PostListView\
(\
ListView\
)\
:model\
=\
Post\
;\
template_name\
=\
'\
blog/home.html\
'\
;\
context_object_name\
=\
'\
posts\
'\
;\
ordering\
=\
[\
'\
-date_posted\
'\
]
class\
PostDetailView\
(\
DetailView\
)\
:\
model\
=\
Post
class\
PostCreateView\
(\
LoginRequiredMixin\
,\
CreateView\
)\
:\
model\
=\
Post;\
fields\
=\
["\
title\
",
"\
content\
"\
];
def\
form_valid\
(\
self
,\
form\
)\
:\
form\
.\
instance\
.\
author\
=\
self\
.\
request\
.\
user;return\
super\
(\
PostCreateView\
,\
self\
)\
.\
form_valid\
(\
form\
)
PostCreateView\
.\
form_valid\
=\
form_valid
class\
PostUpdateView\
(\
LoginRequiredMixin\
,\
UserPassesTestMixin,\
UpdateView\
)\
:model\
=\
Post;\
fields\
=\
[\
"\
title\
"\
,\
"\
content\
"\
]
def\
form_valid\
(\
self\
,\
form\
)\
:form\
.\
instance\
.\
author\
=\
self\
.\
request\
.\
user\
;return\
super\
(PostUpdateView\
,\
self\
)\
.\
form_valid\
(\
form\
)
def\
test_func\
(self)\
->\
Optional\
[\
bool\
]:post\
=\
self\
.\
get_object\
()\
;return\
(\
self\
.\
request\
.\
user\
==\
post\
.\
author\
)
PostUpdateView\
.\
test_func\
=\
test_func;PostUpdateView\
.\
form_valid\
=\
form_valid
class\
PostDeleteView\
(\
LoginRequiredMixin\
,\
UserPassesTestMixin,\
DeleteView\
):model\
=\
Post\
;\
success_url\
=\
'\
/\
'
def\
test_func\
(\
self\
)\
->\
Optional\
[\
bool\
]\
:post\
=\
self\
.\
get_object\
();return\
(\
self\
.\
request\
.\
user\
==\
post\
.\
author\
)
PostDeleteView\
.\
test_func\
=\
test_func